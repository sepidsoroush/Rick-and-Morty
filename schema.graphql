type Character {
  id: ID
  name: String
  status: String
  species: String
  type: String
  gender: String
  origin: Location
  location: Location
  image: String
  episode: [Episode]!
  url: String
  created: String!
}

type Characters {
  info: Info
  results: [Character]
}

type Location {
  id: ID
  name: String
  type: String
  dimension: String
  residents: [Character]!
  url: String
  created: String
}

type Locations {
  info: Info
  results: [Location]
}

type Episode {
  id: ID
  name: String
  air_date: String
  episode: String
  characters: [Character]!
  url: String
  created: String
}

type Episodes {
  info: Info
  results: [Episode]
}

type Query {
  characters(filter: FilterCharacter, page: Int): Characters
  character(id: ID!): Character
  charactersByIds(ids: [ID!]!): [Character]
  locations(filter: FilterLocation, page: Int): Locations
  location(id: ID!): Location
  locationsByIds(ids: [ID!]!): [Location]
  episodes(filter: FilterEpisode, page: Int): Episodes
  episode(id: ID!): Episode
  episodesByIds(ids: [ID!]!): [Episode]
}

type Info {
  count: Int
  pages: Int
  next: String
  prev: String
}

type FilterCharacter {
  name: String
  status: String
  species: String
  type: String
  gender: String
}

type FilterLocation {
  name: String
  type: String
  dimension: String
}

type FilterEpisode {
  name: String
  episode: String
}
